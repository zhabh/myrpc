// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_response_data.proto

#include "rpc_response_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace crucis {
class RpcResponseDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcResponseData>
      _instance;
} _RpcResponseData_default_instance_;
}  // namespace crucis
namespace protobuf_rpc_5fresponse_5fdata_2eproto {
void InitDefaultsRpcResponseDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::crucis::_RpcResponseData_default_instance_;
    new (ptr) ::crucis::RpcResponseData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::crucis::RpcResponseData::InitAsDefaultInstance();
}

void InitDefaultsRpcResponseData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRpcResponseDataImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::crucis::RpcResponseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::crucis::RpcResponseData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::crucis::RpcResponseData, seq_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::crucis::RpcResponseData, service_object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::crucis::RpcResponseData, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::crucis::RpcResponseData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::crucis::_RpcResponseData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rpc_response_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027rpc_response_data.proto\022\006crucis\032\022messa"
      "ge_type.proto\"m\n\017RpcResponseData\022!\n\004type"
      "\030\001 \001(\0162\023.crucis.MessageType\022\016\n\006seq_id\030\002 "
      "\001(\r\022\026\n\016service_object\030\003 \001(\004\022\017\n\007content\030\004"
      " \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 172);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc_response_data.proto", &protobuf_RegisterTypes);
  ::protobuf_message_5ftype_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpc_5fresponse_5fdata_2eproto
namespace crucis {

// ===================================================================

void RpcResponseData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcResponseData::kTypeFieldNumber;
const int RpcResponseData::kSeqIdFieldNumber;
const int RpcResponseData::kServiceObjectFieldNumber;
const int RpcResponseData::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcResponseData::RpcResponseData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_5fresponse_5fdata_2eproto::InitDefaultsRpcResponseData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:crucis.RpcResponseData)
}
RpcResponseData::RpcResponseData(const RpcResponseData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&service_object_) -
    reinterpret_cast<char*>(&type_)) + sizeof(service_object_));
  // @@protoc_insertion_point(copy_constructor:crucis.RpcResponseData)
}

void RpcResponseData::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&service_object_) -
      reinterpret_cast<char*>(&type_)) + sizeof(service_object_));
  _cached_size_ = 0;
}

RpcResponseData::~RpcResponseData() {
  // @@protoc_insertion_point(destructor:crucis.RpcResponseData)
  SharedDtor();
}

void RpcResponseData::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RpcResponseData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcResponseData::descriptor() {
  ::protobuf_rpc_5fresponse_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_5fresponse_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcResponseData& RpcResponseData::default_instance() {
  ::protobuf_rpc_5fresponse_5fdata_2eproto::InitDefaultsRpcResponseData();
  return *internal_default_instance();
}

RpcResponseData* RpcResponseData::New(::google::protobuf::Arena* arena) const {
  RpcResponseData* n = new RpcResponseData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:crucis.RpcResponseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&service_object_) -
      reinterpret_cast<char*>(&type_)) + sizeof(service_object_));
  _internal_metadata_.Clear();
}

bool RpcResponseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:crucis.RpcResponseData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .crucis.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::crucis::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seq_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 service_object = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &service_object_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:crucis.RpcResponseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:crucis.RpcResponseData)
  return false;
#undef DO_
}

void RpcResponseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:crucis.RpcResponseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .crucis.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint32 seq_id = 2;
  if (this->seq_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seq_id(), output);
  }

  // uint64 service_object = 3;
  if (this->service_object() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->service_object(), output);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:crucis.RpcResponseData)
}

::google::protobuf::uint8* RpcResponseData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:crucis.RpcResponseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .crucis.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint32 seq_id = 2;
  if (this->seq_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seq_id(), target);
  }

  // uint64 service_object = 3;
  if (this->service_object() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->service_object(), target);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:crucis.RpcResponseData)
  return target;
}

size_t RpcResponseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:crucis.RpcResponseData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // .crucis.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 seq_id = 2;
  if (this->seq_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq_id());
  }

  // uint64 service_object = 3;
  if (this->service_object() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->service_object());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcResponseData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:crucis.RpcResponseData)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcResponseData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcResponseData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:crucis.RpcResponseData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:crucis.RpcResponseData)
    MergeFrom(*source);
  }
}

void RpcResponseData::MergeFrom(const RpcResponseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:crucis.RpcResponseData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.seq_id() != 0) {
    set_seq_id(from.seq_id());
  }
  if (from.service_object() != 0) {
    set_service_object(from.service_object());
  }
}

void RpcResponseData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:crucis.RpcResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcResponseData::CopyFrom(const RpcResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:crucis.RpcResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcResponseData::IsInitialized() const {
  return true;
}

void RpcResponseData::Swap(RpcResponseData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcResponseData::InternalSwap(RpcResponseData* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(type_, other->type_);
  swap(seq_id_, other->seq_id_);
  swap(service_object_, other->service_object_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcResponseData::GetMetadata() const {
  protobuf_rpc_5fresponse_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_5fresponse_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace crucis

// @@protoc_insertion_point(global_scope)
