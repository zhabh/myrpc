// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: create_user_test_param_define.proto

#ifndef PROTOBUF_create_5fuser_5ftest_5fparam_5fdefine_2eproto__INCLUDED
#define PROTOBUF_create_5fuser_5ftest_5fparam_5fdefine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "add_user_res.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_create_5fuser_5ftest_5fparam_5fdefine_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAddUserRequestImpl();
void InitDefaultsAddUserRequest();
void InitDefaultsAddUserResponseImpl();
void InitDefaultsAddUserResponse();
inline void InitDefaults() {
  InitDefaultsAddUserRequest();
  InitDefaultsAddUserResponse();
}
}  // namespace protobuf_create_5fuser_5ftest_5fparam_5fdefine_2eproto
namespace crucis {
class AddUserRequest;
class AddUserRequestDefaultTypeInternal;
extern AddUserRequestDefaultTypeInternal _AddUserRequest_default_instance_;
class AddUserResponse;
class AddUserResponseDefaultTypeInternal;
extern AddUserResponseDefaultTypeInternal _AddUserResponse_default_instance_;
}  // namespace crucis
namespace crucis {

// ===================================================================

class AddUserRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:crucis.AddUserRequest) */ {
 public:
  AddUserRequest();
  virtual ~AddUserRequest();

  AddUserRequest(const AddUserRequest& from);

  inline AddUserRequest& operator=(const AddUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddUserRequest(AddUserRequest&& from) noexcept
    : AddUserRequest() {
    *this = ::std::move(from);
  }

  inline AddUserRequest& operator=(AddUserRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUserRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddUserRequest* internal_default_instance() {
    return reinterpret_cast<const AddUserRequest*>(
               &_AddUserRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddUserRequest* other);
  friend void swap(AddUserRequest& a, AddUserRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddUserRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AddUserRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddUserRequest& from);
  void MergeFrom(const AddUserRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddUserRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nick_name = 2;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // uint32 seq_id = 3;
  void clear_seq_id();
  static const int kSeqIdFieldNumber = 3;
  ::google::protobuf::uint32 seq_id() const;
  void set_seq_id(::google::protobuf::uint32 value);

  // bool online = 4;
  void clear_online();
  static const int kOnlineFieldNumber = 4;
  bool online() const;
  void set_online(bool value);

  // @@protoc_insertion_point(class_scope:crucis.AddUserRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 seq_id_;
  bool online_;
  mutable int _cached_size_;
  friend struct ::protobuf_create_5fuser_5ftest_5fparam_5fdefine_2eproto::TableStruct;
  friend void ::protobuf_create_5fuser_5ftest_5fparam_5fdefine_2eproto::InitDefaultsAddUserRequestImpl();
};
// -------------------------------------------------------------------

class AddUserResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:crucis.AddUserResponse) */ {
 public:
  AddUserResponse();
  virtual ~AddUserResponse();

  AddUserResponse(const AddUserResponse& from);

  inline AddUserResponse& operator=(const AddUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddUserResponse(AddUserResponse&& from) noexcept
    : AddUserResponse() {
    *this = ::std::move(from);
  }

  inline AddUserResponse& operator=(AddUserResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUserResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddUserResponse* internal_default_instance() {
    return reinterpret_cast<const AddUserResponse*>(
               &_AddUserResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AddUserResponse* other);
  friend void swap(AddUserResponse& a, AddUserResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddUserResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AddUserResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddUserResponse& from);
  void MergeFrom(const AddUserResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddUserResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .crucis.AddUserRes ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  const ::crucis::AddUserRes& ret() const;
  ::crucis::AddUserRes* release_ret();
  ::crucis::AddUserRes* mutable_ret();
  void set_allocated_ret(::crucis::AddUserRes* ret);

  // @@protoc_insertion_point(class_scope:crucis.AddUserResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::crucis::AddUserRes* ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_create_5fuser_5ftest_5fparam_5fdefine_2eproto::TableStruct;
  friend void ::protobuf_create_5fuser_5ftest_5fparam_5fdefine_2eproto::InitDefaultsAddUserResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddUserRequest

// uint64 uid = 1;
inline void AddUserRequest::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AddUserRequest::uid() const {
  // @@protoc_insertion_point(field_get:crucis.AddUserRequest.uid)
  return uid_;
}
inline void AddUserRequest::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:crucis.AddUserRequest.uid)
}

// string nick_name = 2;
inline void AddUserRequest::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserRequest::nick_name() const {
  // @@protoc_insertion_point(field_get:crucis.AddUserRequest.nick_name)
  return nick_name_.GetNoArena();
}
inline void AddUserRequest::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:crucis.AddUserRequest.nick_name)
}
#if LANG_CXX11
inline void AddUserRequest::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:crucis.AddUserRequest.nick_name)
}
#endif
inline void AddUserRequest::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:crucis.AddUserRequest.nick_name)
}
inline void AddUserRequest::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:crucis.AddUserRequest.nick_name)
}
inline ::std::string* AddUserRequest::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:crucis.AddUserRequest.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserRequest::release_nick_name() {
  // @@protoc_insertion_point(field_release:crucis.AddUserRequest.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserRequest::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:crucis.AddUserRequest.nick_name)
}

// uint32 seq_id = 3;
inline void AddUserRequest::clear_seq_id() {
  seq_id_ = 0u;
}
inline ::google::protobuf::uint32 AddUserRequest::seq_id() const {
  // @@protoc_insertion_point(field_get:crucis.AddUserRequest.seq_id)
  return seq_id_;
}
inline void AddUserRequest::set_seq_id(::google::protobuf::uint32 value) {
  
  seq_id_ = value;
  // @@protoc_insertion_point(field_set:crucis.AddUserRequest.seq_id)
}

// bool online = 4;
inline void AddUserRequest::clear_online() {
  online_ = false;
}
inline bool AddUserRequest::online() const {
  // @@protoc_insertion_point(field_get:crucis.AddUserRequest.online)
  return online_;
}
inline void AddUserRequest::set_online(bool value) {
  
  online_ = value;
  // @@protoc_insertion_point(field_set:crucis.AddUserRequest.online)
}

// -------------------------------------------------------------------

// AddUserResponse

// .crucis.AddUserRes ret = 1;
inline bool AddUserResponse::has_ret() const {
  return this != internal_default_instance() && ret_ != NULL;
}
inline const ::crucis::AddUserRes& AddUserResponse::ret() const {
  const ::crucis::AddUserRes* p = ret_;
  // @@protoc_insertion_point(field_get:crucis.AddUserResponse.ret)
  return p != NULL ? *p : *reinterpret_cast<const ::crucis::AddUserRes*>(
      &::crucis::_AddUserRes_default_instance_);
}
inline ::crucis::AddUserRes* AddUserResponse::release_ret() {
  // @@protoc_insertion_point(field_release:crucis.AddUserResponse.ret)
  
  ::crucis::AddUserRes* temp = ret_;
  ret_ = NULL;
  return temp;
}
inline ::crucis::AddUserRes* AddUserResponse::mutable_ret() {
  
  if (ret_ == NULL) {
    ret_ = new ::crucis::AddUserRes;
  }
  // @@protoc_insertion_point(field_mutable:crucis.AddUserResponse.ret)
  return ret_;
}
inline void AddUserResponse::set_allocated_ret(::crucis::AddUserRes* ret) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ret_);
  }
  if (ret) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ret = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ret, submessage_arena);
    }
    
  } else {
    
  }
  ret_ = ret;
  // @@protoc_insertion_point(field_set_allocated:crucis.AddUserResponse.ret)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace crucis

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_create_5fuser_5ftest_5fparam_5fdefine_2eproto__INCLUDED
